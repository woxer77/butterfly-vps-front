{"version":3,"file":"static/js/240.49a7c954.chunk.js","mappings":"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","sources":["../node_modules/debounce/index.js","../node_modules/react-use-measure/dist/web.js","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../node_modules/framer-motion/dist/es/utils/wrap.mjs","../node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? {\n            ...transition,\n            ...transition[key],\n        }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (jsx(Fragment, { children: childrenToRender.map((child) => (jsx(PresenceChild, { isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)))) }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (jsx(PresenceChild, { isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (jsx(PresenceChild, { isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (jsx(Fragment, { children: exitingChildren.size\n            ? childrenToRender\n            : childrenToRender.map((child) => cloneElement(child)) }));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports","useMeasure","_temp","scroll","polyfill","offsetSize","ResizeObserver","window","Error","bounds","set","useState","left","top","width","height","bottom","right","x","y","state","useRef","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","useEffect","current","forceRefresh","resizeChange","scrollChange","useMemo","callback","getBoundingClientRect","size","HTMLElement","offsetHeight","offsetWidth","Object","freeze","areBoundsEqual","createDebounce","removeListeners","forEach","removeEventListener","disconnect","addListeners","observe","scrollContainer","addEventListener","capture","passive","onScroll","enabled","onWindowResize","Boolean","cb","node","findScrollContainers","document","body","overflow","overflowX","overflowY","getComputedStyle","some","prop","push","parentElement","keys","a","b","every","key","supportsScrollTimeline","memo","undefined","ScrollTimeline","GroupPlaybackControls","constructor","animations","stop","runAll","filter","then","onResolve","onReject","Promise","all","catch","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","cancelAll","map","animation","pause","update","prevProgress","onFrame","currentTime","progress","value","frame","cancelFrame","observeTimeline","time","duration","cancelTimeline","speed","max","Math","methodName","controls","play","cancel","complete","resolveElements","elements","scope","selectorCache","_a","root","invariant","querySelectorAll","Element","Array","from","createVisualElement","options","presenceContext","props","visualState","renderState","transform","transformOrigin","style","vars","attrs","latestValues","isSVGElement","SVGVisualElement","enableHardwareAcceleration","HTMLVisualElement","mount","visualElementStore","createGeneratorEasing","scale","generator","spring","keyframes","min","calcGeneratorDuration","maxGeneratorDuration","type","ease","next","millisecondsToSeconds","calcNextTime","prev","labels","startsWith","parseFloat","get","wrap","v","rangeSize","getEasingForSegment","easing","isEasingArray","addKeyframes","sequence","offset","startTime","endTime","keyframe","at","removeItem","eraseKeyframes","mixNumber","compareByTime","defaultSegmentEasing","getSubjectSequence","subject","sequences","has","getValueSequence","name","keyframesAsList","isArray","getValueTransition","transition","isNumber","isNumberKeyframesArray","animateElements","elementOrSelector","numElements","visualElement","delay","animateTarget","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","Map","elementCache","timeLabels","prevTime","totalDuration","segment","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","valueKeyframesAsList","times","defaultOffset","remainingTransition","calculatedDelay","numKeyframes","absoluteDelta","delta","abs","springTransition","secondsToMilliseconds","springEasing","targetTime","remainder","fillOffset","unshift","isMotionValue","subjectSequence","valueSequences","sort","valueOffset","valueEasing","definition","createAnimationsFromSequence","_ref","animateSingleValue","default","animate","valueOrElementOrSequence","isDOMKeyframes","safeMin","minDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","restDelta","restSpeed","origin","target","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","t","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","calcGeneratorVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","Infinity","velocitySampleDuration","resolveValue","prevT","velocityPerSecond","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","index","isAnimatable","complex","test","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","concat","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","Set","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","values","mixVisibility","pipe","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframeValues","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","start","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","cancelTime","playbackSpeed","pendingPlayState","resolver","teardown","onStop","motionValue","onResolved","owner","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","hasOwnProperty","call","prototype","acceleratedValues","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","fill","iterations","direction","animateStyle","pendingTimeline","onfinish","playbackRate","playState","sampleTime","setWithVelocity","supports","getProps","animateMotionValue","isHandoff","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","motionValue$1","setMotionValue","hasValue","getValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","targetAndTransition","transitionOverride","transitionEnd","willChange","animationTypeState","animationState","getState","valueTarget","HandoffAppearAnimations","appearId","getOptimisedAppearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","resolveVariant","resolveFinalValueInKeyframes","setTarget","optimizedAppearDataAttribute","camelToDash","isAnimationControls","isKeyframesTarget","when","_delay","delayChildren","staggerChildren","staggerDirection","useIsMounted","isMounted","useIsomorphicLayoutEffect","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","sizeRef","offsetTop","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","childId","isComplete","register","delete","random","_","PresenceContext","Provider","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useCallback","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","Fragment","presentKeys","targetKeys","numPresent","indexOf","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","includes","leftOverKey","presentChild","presentChildKey","cloneElement","createContext","transformPagePoint","isStatic","reducedMotion","acos","Queue","order","scheduled","process","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","useManualTiming","performance","keepAlive","requestAnimationFrame","clearTime","queueMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","isForcedMotionValue","layoutId","scaleCorrectors","convertBoundingBoxToBox","convertBoxToBoundingBox","_ref2","transformBoxPoints","point","transformPoint","topLeft","bottomRight","scalePoint","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","projectionDelta","instance","display","layoutScroll","transformBox","hasTransform","snapToDefault","Number","isInteger","translateAxis","distance","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","createDelta","createBox","addScaleCorrector","correctors","assign","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","trim","isNumericalString","invalidTemplates","unresolvedKeyframes","readKeyframes","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","prefersReducedMotion","hasReducedMotionListener","valueTypes","dimensionValueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","variantProps","getClosestProjectingNode","allowProjection","projection","parent","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","blockInitialAnimation","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","unmount","valueIsTransform","removeOnChange","on","latestValue","preRender","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","loadFeatures","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","renderedProps","Feature","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutRoot","setOptions","alwaysMeasureLayout","isRefObject","animationType","initialPromotionConfig","updateFeatures","feature","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevPresenceContext","listener","nextValue","prevValue","existingValue","liveStyle","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","getClosestVariantNode","getVariantContext","isVariantLabel","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","getBaseTarget","valueFromInitial","variant","resolveVariantFromProps","eventName","SubscriptionManager","_len","_key","DOMVisualElement","compareDocumentPosition","MotionContext","LazyContext","strict","microtask","cancelMicrotask","useMotionRef","externalRef","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","join","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","useRender","useVisualState","Component","ForwardRefComponent","forwardRef","configAndProps","useLayoutId","lazyContext","visualElementRef","renderer","wantsHandoff","HandoffComplete","animateChanges","useVisualElement","jsxs","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","createHtmlRenderState","copyRawValuesOnly","source","useStyle","buildHTMLStyles","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createSvgRenderState","useSVGProps","_isStatic","visualProps","buildSVGAttrs","isSVGTag","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","read","dimensions","getBBox","tagName","renderSVG","htmlMotionConfig","addDomEvent","handler","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prevLength","animateVariant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","exitAnimation","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","singleCssVariableRegex","split","SVGElement","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","getDefaultValueType","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","defaultType","computedStyle","childSubscription","textContent","renderHTML","translateAlias","numTransforms","getValueAsType","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","allowTransformNone","transformString","transformName","buildTransform","setProperty","newValues","camelCaseAttributes","getAttribute","dashKeys","array","camelKeys","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","substring","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","arr","item","any","remaining","offsetProgress","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith","useMotionValue","setLatest"],"sourceRoot":""}